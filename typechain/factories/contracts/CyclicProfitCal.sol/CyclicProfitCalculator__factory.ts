/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  CyclicProfitCalculator,
  CyclicProfitCalculatorInterface,
} from "../../../contracts/CyclicProfitCal.sol/CyclicProfitCalculator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_flashSwap",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "token0Reserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Reserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "swapFee",
            type: "uint256",
          },
        ],
        internalType: "struct Pool[]",
        name: "poolPath",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "calculateDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "debt",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "token0Reserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Reserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "swapFee",
            type: "uint256",
          },
        ],
        internalType: "struct Pool[]",
        name: "poolPath",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
    ],
    name: "startSwapInMultiPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161186238038061186283398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b6117d1806100916000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639f4874001461003b578063a193771414610064575b600080fd5b61004e6100493660046113d7565b610079565b60405161005b91906116ac565b60405180910390f35b6100776100723660046113d7565b61008c565b005b6000610085838361014e565b9392505050565b600061009783610465565b905060006100a58284610079565b90506100d96040518060400160405280601181526020017002232b13a1031b0b631bab630ba32b21d1607d1b8152506105a2565b6100e2816105e8565b60005460405163382ccf4560e11b81526001600160a01b03909116906370599e8a906101169085908790869060040161154e565b600060405180830381600087803b15801561013057600080fd5b505af1158015610144573d6000803e3d6000fd5b5050505050505050565b600080835167ffffffffffffffff81111561017957634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156101b257816020015b61019f611358565b8152602001906001900390816101975790505b5090506000845160016101c591906116e6565b67ffffffffffffffff8111156101eb57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610214578160200160208202803683370190505b5090506000849050848260008151811061023e57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505060005b86518110156103c15761029a87828151811061028d57634e487b7160e01b600052603260045260246000fd5b602002602001015161062b565b8482815181106102ba57634e487b7160e01b600052603260045260246000fd5b60200260200101819052508681815181106102e557634e487b7160e01b600052603260045260246000fd5b6020026020010151602001516001600160a01b0316826001600160a01b0316141561033d5786818151811061032a57634e487b7160e01b600052603260045260246000fd5b602002602001015160400151915061036c565b86818151811061035d57634e487b7160e01b600052603260045260246000fd5b60200260200101516020015191505b81836103798360016116e6565b8151811061039757634e487b7160e01b600052603260045260246000fd5b6001600160a01b0390921660209283029190910190910152806103b981611754565b915050610261565b506000806000806103d28a8761069a565b935093509350935060006103e68585610b57565b905060006103f48484610b57565b905061045582828a60008151811061041c57634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b031685602001516001600160a01b03161461044a578460200151610450565b84604001515b610ccc565b9c9b505050505050505050505050565b606060005b82518110156105985782818151811061049357634e487b7160e01b600052603260045260246000fd5b6020026020010151600001516001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156104d757600080fd5b505afa1580156104eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050f91906114f3565b826001600160701b03169250816001600160701b031691505084838151811061054857634e487b7160e01b600052603260045260246000fd5b602002602001015160600185848151811061057357634e487b7160e01b600052603260045260246000fd5b602090810291909101015160800191909152528061059081611754565b91505061046a565b508190505b919050565b6105e5816040516024016105b691906115ed565b60408051601f198184030181529190526020810180516001600160e01b031663104c13eb60e21b179052610edf565b50565b6105e5816040516024016105fc91906116ac565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b179052610edf565b610633611358565b6040518060c0016040528083600001516001600160a01b0316815260200183602001516001600160a01b0316815260200183604001516001600160a01b0316815260200183606001518152602001836080015181526020018360a001518152509050919050565b6060806060806000600287516106b091906116fe565b90508067ffffffffffffffff8111156106d957634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561071257816020015b6106ff611358565b8152602001906001900390816106f75790505b5094506107208160016116e6565b67ffffffffffffffff81111561074657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561076f578160200160208202803683370190505b50935080875161077f919061173d565b67ffffffffffffffff8111156107a557634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156107de57816020015b6107cb611358565b8152602001906001900390816107c35790505b5092508087516107ee919061173d565b6107f99060016116e6565b67ffffffffffffffff81111561081f57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610848578160200160208202803683370190505b50915060005b85518110156109175761087a88828151811061028d57634e487b7160e01b600052603260045260246000fd5b86828151811061089a57634e487b7160e01b600052603260045260246000fd5b60200260200101819052508681815181106108c557634e487b7160e01b600052603260045260246000fd5b60200260200101518582815181106108ed57634e487b7160e01b600052603260045260246000fd5b6001600160a01b03909216602092830291909101909101528061090f81611754565b91505061084e565b508585518151811061093957634e487b7160e01b600052603260045260246000fd5b60200260200101518486518151811061096257634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b031681525050858551815181106109a357634e487b7160e01b600052603260045260246000fd5b6020026020010151826000815181106109cc57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b03168152505060005b8351811015610ae257610a2488610a0684846116e6565b8151811061028d57634e487b7160e01b600052603260045260246000fd5b848281518110610a4457634e487b7160e01b600052603260045260246000fd5b60209081029190910101528682610a5c8360016116e6565b610a6691906116e6565b81518110610a8457634e487b7160e01b600052603260045260246000fd5b602002602001015183826001610a9a91906116e6565b81518110610ab857634e487b7160e01b600052603260045260246000fd5b6001600160a01b039092166020928302919091019091015280610ada81611754565b9150506109ef565b5085855181518110610b0457634e487b7160e01b600052603260045260246000fd5b602002602001015184865181518110610b2d57634e487b7160e01b600052603260045260246000fd5b60200260200101906001600160a01b031690816001600160a01b0316815250505092959194509250565b610b5f611358565b825160011415610b995782600081518110610b8a57634e487b7160e01b600052603260045260246000fd5b60200260200101519050610cc6565b825160021415610c57578151600314610bcd5760405162461bcd60e51b8152600401610bc490611640565b60405180910390fd5b610c5083600081518110610bf157634e487b7160e01b600052603260045260246000fd5b602002602001015184600181518110610c1a57634e487b7160e01b600052603260045260246000fd5b602002602001015184600181518110610c4357634e487b7160e01b600052603260045260246000fd5b6020026020010151610f00565b9050610cc6565b600080600080610c67878761069a565b93509350935093506000610c7b8585610b57565b90506000610c898484610b57565b9050610cbd82828760018951610c9f919061173d565b81518110610c4357634e487b7160e01b600052603260045260246000fd5b96505050505050505b92915050565b6000816001600160a01b031684602001516001600160a01b03161480610d075750816001600160a01b031684604001516001600160a01b0316145b8015610d475750816001600160a01b031683602001516001600160a01b03161480610d475750816001600160a01b031683604001516001600160a01b0316145b610d635760405162461bcd60e51b8152600401610bc490611677565b600080600080856001600160a01b031688602001516001600160a01b03161415610d9a578760800151935087606001519250610da9565b87606001519350876080015192505b856001600160a01b031687602001516001600160a01b03161415610dd857505060808501516060860151610de5565b5050606085015160808601515b60008860a00151612710610df9919061173d565b90506000612710610e0a868461171e565b610e1491906116fe565b610e1e90846116e6565b610e28848861171e565b610e3291906116fe565b90506000612710610e43878561171e565b610e4d91906116fe565b610e5790856116e6565b610e639061271061171e565b86610e6e878661171e565b610e78919061171e565b610e8291906116fe565b90508282610eb061271082610e97868661171e565b610ea1919061171e565b610eab91906116fe565b611158565b610eba919061173d565b610ec69061271061171e565b610ed091906116fe565b9b9a5050505050505050505050565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b610f08611358565b816001600160a01b031684602001516001600160a01b03161480610f415750816001600160a01b031684604001516001600160a01b0316145b8015610f815750816001600160a01b031683602001516001600160a01b03161480610f815750816001600160a01b031683604001516001600160a01b0316145b610f9d5760405162461bcd60e51b8152600401610bc490611677565b600080600080600080876001600160a01b03168a602001516001600160a01b03161415610fde57896080015195508960600151945089604001519150610ff4565b8960600151955089608001519450896020015191505b876001600160a01b031689602001516001600160a01b0316141561102c57886080015192508860600151935088604001519050611042565b8860600151925088608001519350886020015190505b60006110568b60a001518b60a00151611333565b6110629061271061173d565b90506000612710611073888461171e565b61107d91906116fe565b61108790876116e6565b611091878a61171e565b61109b91906116fe565b905060006127106110ac898561171e565b6110b691906116fe565b6110c090886116e6565b612710876110ce8b8761171e565b6110d8919061171e565b6110e291906116fe565b6110ec91906116fe565b90506040518060c0016040528060006001600160a01b03168152602001866001600160a01b03168152602001856001600160a01b031681526020018381526020018281526020016111458f60a001518f60a00151611333565b90529d9c50505050505050505050505050565b6000816111675750600061059d565b600182608081901c1561117f5760409190911b9060801c5b604081901c156111945760209190911b9060401c5b602081901c156111a95760109190911b9060201c5b601081901c156111be5760089190911b9060101c5b600881901c156111d35760049190911b9060081c5b600481901c156111e85760029190911b9060041c5b600281901c156111fa57600182901b91505b600182858161121957634e487b7160e01b600052601260045260246000fd5b048301901c9150600182858161123f57634e487b7160e01b600052601260045260246000fd5b048301901c9150600182858161126557634e487b7160e01b600052601260045260246000fd5b048301901c9150600182858161128b57634e487b7160e01b600052601260045260246000fd5b048301901c915060018285816112b157634e487b7160e01b600052601260045260246000fd5b048301901c915060018285816112d757634e487b7160e01b600052601260045260246000fd5b048301901c915060018285816112fd57634e487b7160e01b600052601260045260246000fd5b048301901c915061132b8283868161132557634e487b7160e01b600052601260045260246000fd5b04611349565b949350505050565b60008183116113425781610085565b5090919050565b60008183106113425781610085565b6040518060c0016040528060006001600160a01b0316815260200160006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b80356001600160a01b038116811461059d57600080fd5b80516001600160701b038116811461059d57600080fd5b60008060408084860312156113ea578283fd5b833567ffffffffffffffff80821115611401578485fd5b818601915086601f830112611414578485fd5b813560208282111561142857611428611785565b61143581828402016116b5565b828152818101935084820160c0808502870184018c101561145457898afd5b8996505b848710156114d45780828d03121561146e57898afd5b611477816116b5565b611480836113a9565b815261148d8584016113a9565b8582015261149c8984016113a9565b818a0152606083810135908201526080808401359082015260a080840135908201528652600196909601959483019490810190611458565b5050809750506114e58189016113a9565b955050505050509250929050565b600080600060608486031215611507578081fd5b611510846113c0565b925061151e602085016113c0565b9150604084015163ffffffff81168114611536578182fd5b809150509250925092565b6001600160a01b03169052565b6060808252845182820181905260009190608090818501906020808a01865b838110156115c957815180516001600160a01b03908116875284820151811685880152604080830151909116908701528781015188870152868101518787015260a0908101519086015260c0909401939082019060010161156d565b50508295506115da8188018a611541565b5050505050826040830152949350505050565b6000602080835283518082850152825b81811015611619578581018301518582016040015282016115fd565b8181111561162a5783604083870101525b50601f01601f1916929092016040019392505050565b6020808252601d908201527f50617468206973206e6f7420617420636f727265637420666f726d6174000000604082015260600190565b6020808252818101527f4e6f7420666f756e6420616e7920696e7465726d65646961727920746f6b656e604082015260600190565b90815260200190565b604051601f8201601f1916810167ffffffffffffffff811182821017156116de576116de611785565b604052919050565b600082198211156116f9576116f961176f565b500190565b60008261171957634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156117385761173861176f565b500290565b60008282101561174f5761174f61176f565b500390565b60006000198214156117685761176861176f565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea264697066735822122014ea5f976e95f68c556f5bede08bae7b952a3d65c70e91f21fc0888a6722adef64736f6c63430008010033";

type CyclicProfitCalculatorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CyclicProfitCalculatorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CyclicProfitCalculator__factory extends ContractFactory {
  constructor(...args: CyclicProfitCalculatorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _flashSwap: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<CyclicProfitCalculator> {
    return super.deploy(
      _flashSwap,
      overrides || {}
    ) as Promise<CyclicProfitCalculator>;
  }
  override getDeployTransaction(
    _flashSwap: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_flashSwap, overrides || {});
  }
  override attach(address: string): CyclicProfitCalculator {
    return super.attach(address) as CyclicProfitCalculator;
  }
  override connect(signer: Signer): CyclicProfitCalculator__factory {
    return super.connect(signer) as CyclicProfitCalculator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CyclicProfitCalculatorInterface {
    return new utils.Interface(_abi) as CyclicProfitCalculatorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CyclicProfitCalculator {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CyclicProfitCalculator;
  }
}
