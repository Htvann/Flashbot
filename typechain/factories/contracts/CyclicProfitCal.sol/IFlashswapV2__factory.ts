/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IFlashswapV2,
  IFlashswapV2Interface,
} from "../../../contracts/CyclicProfitCal.sol/IFlashswapV2";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "poolAddress",
            type: "address",
          },
          {
            internalType: "address",
            name: "token0",
            type: "address",
          },
          {
            internalType: "address",
            name: "token1",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "token0Reserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "token1Reserve",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "swapFee",
            type: "uint256",
          },
        ],
        internalType: "struct Pool[]",
        name: "poolPath",
        type: "tuple[]",
      },
      {
        internalType: "address",
        name: "baseToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "debtAmount",
        type: "uint256",
      },
    ],
    name: "startSwapInMultiPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IFlashswapV2__factory {
  static readonly abi = _abi;
  static createInterface(): IFlashswapV2Interface {
    return new utils.Interface(_abi) as IFlashswapV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IFlashswapV2 {
    return new Contract(address, _abi, signerOrProvider) as IFlashswapV2;
  }
}
